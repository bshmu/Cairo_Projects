// mod utils {
//     use traits::{Into, TryInto};
//     use dict::Felt252DictTrait;

//     fn byte_to_ascii(byte: usize) -> felt252 {
//         // Check that the byte can fit into a ASCII
//         assert(byte < 127, "Non-ASCI byte encountered!");

//         // byte_felt252 = byte.into();
//         let mut ascii_table: Felt252Dict<felt252> = Default::default();
//         ascii_table.append("32", " ");		
//         ascii_table.append("33", "!")
// // ascii_table.append("34",	"\""")
// // ascii_table.append("35",	"#")	(Number sign)			
// // ascii_table.append("36",	$	(Dollar sign)			
// // ascii_table.append("37",	%	(Percent sign)			
// // ascii_table.append("38",	&	(Ampersand)			
// // ascii_table.append("39",	'	(Apostrophe)			
// // ascii_table.append("40",	(	(round brackets or parentheses)			
// // ascii_table.append("41",	)	(round brackets or parentheses)			
// // ascii_table.append("42",	*	(Asterisk)			
// // ascii_table.append("43",	+	(Plus sign)			
// // ascii_table.append("44",	,	(Comma)			
// // ascii_table.append("45",	-	(Hyphen)			
// // ascii_table.append("46",	.	(Full stop , dot)			
// // ascii_table.append("47",	/	(Slash)			
// // ascii_table.append("48",	0	(number zero)			
// // ascii_table.append("49",	1	(number one)			
// // ascii_table.append("50",	2	(number two)			
// // ascii_table.append("51",	3	(number three)			
// // ascii_table.append("52",	4	(number four)			
// // ascii_table.append("53",	5	(number five)			
// // ascii_table.append("54",	6	(number six)			
// // ascii_table.append("55",	7	(number seven)			
// // ascii_table.append("56",	8	(number eight)			
// // ascii_table.append("57",	9	(number nine)			
// // ascii_table.append("58",	:	(Colon)			
// // ascii_table.append("59",	;	(Semicolon)			
// // ascii_table.append("60",	<	(Less-than sign )			
// // ascii_table.append("61",	=	(Equals sign)			
// // ascii_table.append("62",	>	(Greater-than sign ; Inequality) 			
// // ascii_table.append("63",	?	(Question mark)			
// // ascii_table.append("64",	@	(At sign)			
// // ascii_table.append("65",	A	(Capital A )			
// // ascii_table.append("66",	B	(Capital B )			
// // ascii_table.append("67",	C	(Capital C )			
// // ascii_table.append("68",	D	(Capital D )			
// // ascii_table.append("69",	E	(Capital E )			
// // ascii_table.append("70",	F	(Capital F )			
// // ascii_table.append("71",	G	(Capital G )			
// // ascii_table.append("72",	H	(Capital H )			
// // ascii_table.append("73",	I	(Capital I )			
// // ascii_table.append("74",	J	(Capital J )			
// // ascii_table.append("75",	K	(Capital K )			
// // ascii_table.append("76",	L	(Capital L )			
// // ascii_table.append("77",	M	(Capital M )			
// // ascii_table.append("78",	N	(Capital N )			
// // ascii_table.append("79",	O	(Capital O )			
// // ascii_table.append("80",	P	(Capital P )			
// // ascii_table.append("81",	Q	(Capital Q )			
// // ascii_table.append("82",	R	(Capital R )			
// // ascii_table.append("83",	S	(Capital S )			
// // ascii_table.append("84",	T	(Capital T )			
// // ascii_table.append("85",	U	(Capital U )			
// // ascii_table.append("86",	V	(Capital V )			
// // ascii_table.append("87",	W	(Capital W )			
// // ascii_table.append("88",	X	(Capital X )			
// // ascii_table.append("89",	Y	(Capital Y )			
// // ascii_table.append("90",	Z	(Capital Z )			
// // ascii_table.append("91",	[	(square brackets or box brackets)			
// // ascii_table.append("92",	\	(Backslash)			
// // ascii_table.append("93",	]	(square brackets or box brackets)			
// // ascii_table.append("94",	^	(Caret or circumflex accent)			
// // ascii_table.append("95",	_	(underscore , understrike , underbar or low line)			
// // ascii_table.append("96",	`	(Grave accent)			
// // ascii_table.append("97",	a	(Lowercase  a )			
// // ascii_table.append("98",	b	(Lowercase  b )			
// // ascii_table.append("99",	c	(Lowercase  c )			
// // ascii_table.append("100",	d	(Lowercase  d )			
// // ascii_table.append("101", e	(Lowercase  e )			
// // ascii_table.append("102",	f	(Lowercase  f )			
// // ascii_table.append("103",	g	(Lowercase  g )			
// // ascii_table.append("104",	h	(Lowercase  h )			
// // ascii_table.append("105",	i	(Lowercase  i )			
// // ascii_table.append("106",	j	(Lowercase  j )			
// // ascii_table.append("107",	k	(Lowercase  k )			
// // ascii_table.append("108",	l	(Lowercase  l )			
// // ascii_table.append("109",	m	(Lowercase  m )			
// // ascii_table.append("110", n	(Lowercase  n )			
// // ascii_table.append("111",	o	(Lowercase  o )			
// // ascii_table.append("112",	p	(Lowercase  p )			
// // ascii_table.append("113", q	(Lowercase  q )			
// // ascii_table.append("114",	r	(Lowercase  r )			
// // ascii_table.append("115",	s	(Lowercase  s )			
// // ascii_table.append("116",	t	(Lowercase  t )			
// // ascii_table.append("117",	u	(Lowercase  u )			
// // ascii_table.append("118",	v	(Lowercase  v )			
// // ascii_table.append("119",	w	(Lowercase  w )			
// // ascii_table.append("120", x	(Lowercase  x )			
// // ascii_table.append("121",	y	(Lowercase  y )			
// // ascii_table.append("122",	z	(Lowercase  z )			
// // ascii_table.append("123",	{	(curly brackets or braces)			
// // ascii_table.append("124",	|	(vertical-bar, vbar, vertical line or vertical slash)			
// // ascii_table.append("125",	}	(curly brackets or braces)

// }
// }